---
sidebar_position: 1
---

# Quickstart

This notebook showcases the key use cases of Tenzir in an interactive manner.

:::caution Work in Progress
This page is work in progress. It is the first example of a [notebook-based
approach of writing user
guides](/docs/contribute/notebooks), but the content and
CI-workflow is not fully fleshed out. Stay tuned.
:::

## Install Tenzir

First, let's get a Tenzir binary to play with. The easiest way to [setup
Tenzir](/docs/setup) is downloading a static binary on Linux.

Following the instructions to add `/opt/tenzir/bin` to your `PATH`, test
whether you are ready to use Tenzir:

```{bash}
#| eval: false
tenzir version
```

## Start a Tenzir node

Begin with starting a Tenzir node:

```{bash}
#| eval: false
tenzir start
```
```
[14:12:09.207] Tenzir v2.1.0 is listening on localhost:5158
```

This command creates a listening socket at `localhost:5158` that you can now
interact with client commands from other terminals.

Test the connection with a new command:

```{bash}
#| eval: false
```
```
{
  "current-memory-usage": 10322685460480,
  "database-path": "/tmp/tenzir",
  "in-memory-table-slices": 0,
  "peak-memory-usage": 645167841280
}
```

## Ingest data

After we have a Tenzir node to interact with, let's ingest some data.

We [prepared a dataset][m57-with-malware] derived from one day of the M57
recording and injected with malicious traffic from malware-trafic-analysis.net,
adjusting timestamps such that the malware activity occurs in the same day as
the background noise.

[m57-with-malware]: https://drive.google.com/drive/folders/1mPJYVGKTk86P2JU3KD-WFz8tUkTLK095?usp=sharing

```{bash}
#| eval: false
cd /tmp
curl -OL TODO
tenzir import pcap < dataset/PCAP/*.pcap
tenzir import zeek < dataset/Zeek/*.log
tenzir import suricata < dataset/Suricata/eve.json
```

## Run queries

With a loaded Tenzir node, we can now answer some questions.
