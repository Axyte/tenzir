"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1085],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||l;return r?n.createElement(h,o(o({ref:t},u),{},{components:r})):n.createElement(h,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},66992:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const l={},o="hash",i={unversionedId:"understand/query-language/operators/hash",id:"understand/query-language/operators/hash",title:"hash",description:"Computes a SHA256 hash digest of a given field.",source:"@site/docs/understand/query-language/operators/hash.md",sourceDirName:"understand/query-language/operators",slug:"/understand/query-language/operators/hash",permalink:"/docs/understand/query-language/operators/hash",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/understand/query-language/operators/hash.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"extend",permalink:"/docs/understand/query-language/operators/extend"},next:{title:"head",permalink:"/docs/understand/query-language/operators/head"}},s={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Pipeline Operator String Syntax (Experimental)",id:"pipeline-operator-string-syntax-experimental",level:2},{value:"Example",id:"example-1",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hash"},"hash"),(0,a.kt)("p",null,"Computes a SHA256 hash digest of a given field."),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"field: string"),": the field name over which the hash is computed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"out: string"),": the field name in which to store the digest."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"salt: string"),": a salt value for the hash. ",(0,a.kt)("em",{parentName:"li"},"(optional)"))),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'hash:\n  field: username\n  out: pseudonym\n  salt: "B3IwnumKPEJDAA4u"\n')),(0,a.kt)("h2",{id:"pipeline-operator-string-syntax-experimental"},"Pipeline Operator String Syntax (Experimental)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hash (-s|--salt=STRING) FIELD\n")),(0,a.kt)("h3",{id:"example-1"},"Example"),(0,a.kt)("p",null,"Hash all values of the field ",(0,a.kt)("inlineCode",{parentName:"p"},"username")," using the salt value ",(0,a.kt)("inlineCode",{parentName:"p"},'"xxx"')," and store\nthe digest in a new field ",(0,a.kt)("inlineCode",{parentName:"p"},"username_hashed"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'hash --salt="B3IwnumKPEJDAA4u" username\n')))}d.isMDXComponent=!0}}]);