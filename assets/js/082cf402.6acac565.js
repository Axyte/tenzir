"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6752],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=m(r),g=n,h=c["".concat(s,".").concat(g)]||c[g]||d[g]||i;return r?a.createElement(h,l(l({ref:t},p),{},{components:r})):a.createElement(h,l({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,l[1]=o;for(var m=2;m<i;m++)l[m]=r[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},45133:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=r(87462),n=(r(67294),r(3905));const i={title:"VAST v2.4.1",description:"Faster Query Taste",authors:"dominiklohmann",date:new Date("2022-12-19T00:00:00.000Z"),tags:["release","feather","performance"]},l=void 0,o={permalink:"/blog/vast-v2.4.1",source:"@site/blog/vast-v2.4.1/index.md",title:"VAST v2.4.1",description:"Faster Query Taste",date:"2022-12-19T00:00:00.000Z",formattedDate:"December 19, 2022",tags:[{label:"release",permalink:"/blog/tags/release"},{label:"feather",permalink:"/blog/tags/feather"},{label:"performance",permalink:"/blog/tags/performance"}],readingTime:1.705,hasTruncateMarker:!0,authors:[{name:"Dominik Lohmann",title:"Engineering Manager",url:"https://github.com/dominiklohmann",email:"dominik@tenzir.com",imageURL:"https://github.com/dominiklohmann.png",key:"dominiklohmann"}],frontMatter:{title:"VAST v2.4.1",description:"Faster Query Taste",authors:"dominiklohmann",date:"2022-12-19T00:00:00.000Z",tags:["release","feather","performance"]},prevItem:{title:"Parquet & Feather: Data Engineering Woes",permalink:"/blog/parquet-and-feather-data-engineering-woes"},nextItem:{title:"VAST v2.4",permalink:"/blog/vast-v2.4"}},s={authorsImageUrls:[void 0]},m=[{value:"Reading Feather Files Incrementally",id:"reading-feather-files-incrementally",level:2}],p={toc:m},c="wrapper";function d(e){let{components:t,...i}=e;return(0,n.kt)(c,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/tenzir/vast/releases/tag/v2.4.1"},"VAST v2.4.1")," improves the performance of queries when VAST\nis under high load, and significantly reduces the time to first result for\nqueries with a low selectivity."),(0,n.kt)("h2",{id:"reading-feather-files-incrementally"},"Reading Feather Files Incrementally"),(0,n.kt)("p",null,"VAST's Feather store na\xefvely used the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/apache/arrow/blob/apache-arrow-10.0.1/cpp/src/arrow/ipc/feather.h#L57-L108"},"Feather reader")," from the\nApache Arrow C++ library in its initial implementation. However, its API is\nrather limited: It does not support reading record batches incrementally. We've\nswapped this out with a more efficient implementation that does."),(0,n.kt)("p",null,"This is best explained visually:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Incremental Reads",src:r(12539).Z+"#gh-light-mode-only",width:"1977",height:"486"}),"\n",(0,n.kt)("img",{alt:"Incremental Reads",src:r(53231).Z+"#gh-dark-mode-only",width:"1977",height:"486"})),(0,n.kt)("p",null,"Within the scope of a single Feather store file, a single query takes the same\namount of time overall, but there exist two distinct advantages of this\napproach:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The first result arrives much faster at the client."),(0,n.kt)("li",{parentName:"ol"},"Stores do less work for cancelled queries.")),(0,n.kt)("p",null,"One additional benefit that is not immediately obvious comes into play when\nqueries arrives at multiple stores in parallel: disk reads are more evenly\nspread out now, making them less likely to overlap between stores. For\ndeployments with slower I/O paths this can lead to a significant query\nperformance improvement."),(0,n.kt)("p",null,"To verify and test this, we've created a VAST database with 300M Zeek events\n(33GB on disk) from a Corelight sensor. All tests were performed on a cold start\nof VAST, i.e., we stopped and started VAST after every repetition of each test."),(0,n.kt)("p",null,"We performed three tests:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Export a single event (20 times)"),(0,n.kt)("li",{parentName:"ol"},"Export all events (20 times)"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"/docs/setup/tune#rebuild-partitions"},"Rebuild")," the entire database (3 times)")),(0,n.kt)("p",null,"The results are astonishingly good:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Test"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Benchmark"),(0,n.kt)("th",{parentName:"tr",align:"center"},"v2.4.0"),(0,n.kt)("th",{parentName:"tr",align:"center"},"v2.4.1"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Improvement"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"(1)")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Avg. store load time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"55.1ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"4.2ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"13.1x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"Time to first result/Total time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"19.8ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"14.5ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.4x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"(2)")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Avg. store load time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"386.5ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"7.3ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"52.9x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"Time to first result"),(0,n.kt)("td",{parentName:"tr",align:"center"},"69.2ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"25.4ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"2.7x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"Total time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"39.38s"),(0,n.kt)("td",{parentName:"tr",align:"center"},"33.30s"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.2x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"(3)")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Avg. store load time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"480.3ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"9.1ms"),(0,n.kt)("td",{parentName:"tr",align:"center"},"52.7x")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"}),(0,n.kt)("td",{parentName:"tr",align:"center"},"Total time"),(0,n.kt)("td",{parentName:"tr",align:"center"},"210.5s"),(0,n.kt)("td",{parentName:"tr",align:"center"},"198.0s"),(0,n.kt)("td",{parentName:"tr",align:"center"},"1.1x")))),(0,n.kt)("p",null,"If you're using the Feather store backend (the default as of v2.4.0), you will\nsee an immediate improvement with VAST v2.4.1. There are no other changes\nbetween the two releases."),(0,n.kt)("admonition",{title:"Parquet Stores",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"VAST also offers an experimental Parquet store backend, for which we plan to\nmake a similar improvement in a coming release.")))}d.isMDXComponent=!0},53231:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/incremental-reads-dark-1e4cba648e5f9ffbe1304409cdead8bf.png"},12539:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/incremental-reads-light-966a539e06c8d4dce29c921e51d024bd.png"}}]);