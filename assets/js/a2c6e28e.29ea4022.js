"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7148],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(n),f=a,m=c["".concat(l,".").concat(f)]||c[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},5509:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>g,default:()=>k,frontMatter:()=>m,metadata:()=>y,toc:()=>b});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(p)for(var n of p(t))s.call(t,n)&&u(e,n,t[n]);return e},d=(e,t)=>o(e,i(t)),f=(e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&p)for(var r of p(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const m={},g="put",y={unversionedId:"understand/language/operators/put",id:"understand/language/operators/put",title:"put",description:"Assign new values to given fields in the input data, or add new fields if the",source:"@site/docs/understand/language/operators/put.md",sourceDirName:"understand/language/operators",slug:"/understand/language/operators/put",permalink:"/docs/next/understand/language/operators/put",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/main/web/docs/understand/language/operators/put.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"pseudonymize",permalink:"/docs/next/understand/language/operators/pseudonymize"},next:{title:"rename",permalink:"/docs/next/understand/language/operators/rename"}},v={},b=[{value:"Synopsis",id:"synopsis",level:2},{value:"Extractors",id:"extractors",level:3},{value:"Example",id:"example",level:3}],O={toc:b},h="wrapper";function k(e){var t=e,{components:n}=t,a=f(t,["components"]);return(0,r.kt)(h,d(c(c({},O),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",c({},{id:"put"}),"put"),(0,r.kt)("p",null,"Assign new values to given fields in the input data, or add new fields if the\nassigned-to field did not exist."),(0,r.kt)("h2",c({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{}),"put EXTRACTORS=VALUE[, \u2026]\n")),(0,r.kt)("h3",c({},{id:"extractors"}),"Extractors"),(0,r.kt)("p",null,"The extractors of fields to replace with a new value. For extractors that do not\nmatch any fields in the input events, the operator adds a new field at the end."),(0,r.kt)("h3",c({},{id:"example"}),"Example"),(0,r.kt)("p",null,"Given this input event (JSON) and this pipeline:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "source_ip": "10.0.0.1",\n  "dest_ip": "192.168.0.1"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-c"}),'put source_ip="REDACTED", note="masked source IP address for GDPR-compliance"\n')),(0,r.kt)("p",null,"The pipeline will replace the field ",(0,r.kt)("inlineCode",{parentName:"p"},"source_ip")," with a fixed value, and add a\nnew field ",(0,r.kt)("inlineCode",{parentName:"p"},"note")," at the end, leading to this output:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "source_ip": "REDACTED",\n  "dest_ip": "192.168.0.1",\n  "note": "masked source IP address for GDPR-compliance"\n}\n')))}k.isMDXComponent=!0}}]);