"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5981],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||s;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<s;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},50669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const s={sidebar_position:0,sidebar_label:"REST API"},o="REST API",i={unversionedId:"use/integrate/rest-api/README",id:"use/integrate/rest-api/README",title:"REST API",description:"VAST provides a REST API to interact with a server node. The web",source:"@site/docs/use/integrate/rest-api/README.md",sourceDirName:"use/integrate/rest-api",slug:"/use/integrate/rest-api/",permalink:"/docs/use/integrate/rest-api/",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/use/integrate/rest-api/README.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,sidebar_label:"REST API"},sidebar:"docsSidebar",previous:{title:"Execute Sigma Rules",permalink:"/docs/use/detect/execute-sigma-rules"},next:{title:"Python",permalink:"/docs/use/integrate/python"}},l={},d=[{value:"Deployment Modes",id:"deployment-modes",level:2},{value:"Authentication",id:"authentication",level:2},{value:"TLS Modes",id:"tls-modes",level:2},{value:"Developer Mode",id:"developer-mode",level:3},{value:"Server Mode",id:"server-mode",level:3},{value:"Upstream TLS Mode",id:"upstream-tls-mode",level:3},{value:"Mutual TLS Mode",id:"mutual-tls-mode",level:3},{value:"Scaling",id:"scaling",level:2}],p={toc:d},c="wrapper";function m(e){let{components:t,...s}=e;return(0,r.kt)(c,(0,a.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rest-api"},"REST API"),(0,r.kt)("p",null,"VAST provides a REST API to interact with a server node. The ",(0,r.kt)("inlineCode",{parentName:"p"},"web"),"\n",(0,r.kt)("a",{parentName:"p",href:"/docs/understand/architecture/plugins"},"plugin")," implements the API as a\ndedicated component that can run in multiple ways."),(0,r.kt)("admonition",{title:"API Documentation",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"At ",(0,r.kt)("a",{parentName:"p",href:"/api"},"https://vast.io/api")," you can find documentation of the API routes and\nan ",(0,r.kt)("a",{parentName:"p",href:"https://spec.openapis.org/oas/latest.html"},"OpenAPI Specification"),"."),(0,r.kt)("p",{parentName:"admonition"},"Please note that we consider v0 still experimental and therefore do not provide\nstability guarantees.")),(0,r.kt)("h2",{id:"deployment-modes"},"Deployment Modes"),(0,r.kt)("p",null,"There exist two ways to run the ",(0,r.kt)("inlineCode",{parentName:"p"},"web")," plugin: either as a separate process or\nembedded inside a VAST server node:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - Single Deployment",src:n(76691).Z+"#gh-light-mode-only",width:"1440",height:"860"}),"\n",(0,r.kt)("img",{alt:"REST API - Single Deployment",src:n(62587).Z+"#gh-dark-mode-only",width:"1440",height:"860"})),(0,r.kt)("p",null,"Running the REST API as dedicated process gives you more flexibility with\nrespect to deployment, fault isolation, and scaling. An embedded setup offers\nhigher throughput and lower latency between the REST API and the other VAST\ncomponents."),(0,r.kt)("p",null,"To run the REST API as dedicated process, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"web server")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web server --certfile=/path/to/server.certificate --keyfile=/path/to/private.key\n")),(0,r.kt)("p",null,"To run the server within the main VAST process, use a ",(0,r.kt)("inlineCode",{parentName:"p"},"start")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'vast start --commands="web server [...]"\n')),(0,r.kt)("p",null,"The server will only accept TLS requests by default. To allow clients to connect\nsuccessfully, you need to pass a valid certificate and corresponding private key\nwith the ",(0,r.kt)("inlineCode",{parentName:"p"},"--certfile")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"--keyfile")," arguments."),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("p",null,"Clients must authenticate all requests with a valid token. The token is a short\nstring that clients put in the ",(0,r.kt)("inlineCode",{parentName:"p"},"X-VAST-Token")," request header. You can generate a\nvalid token on the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web generate-token\n")),(0,r.kt)("p",null,"For local testing and development, generating suitable certificates and tokens\ncan be a hassle. For this scenario, you can start the server in ",(0,r.kt)("a",{parentName:"p",href:"#developer-mode"},"developer\nmode")," where it accepts plain HTTP connections are does not\nperform token authentication."),(0,r.kt)("h2",{id:"tls-modes"},"TLS Modes"),(0,r.kt)("p",null,"There exist four modes to start the REST API, each of which suits a slightly\ndifferent use case."),(0,r.kt)("h3",{id:"developer-mode"},"Developer Mode"),(0,r.kt)("p",null,"The developer mode bypasses encryption and authentication token verification."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - Developer Mode",src:n(91827).Z+"#gh-light-mode-only",width:"2520",height:"760"}),"\n",(0,r.kt)("img",{alt:"REST API - Developer Mode",src:n(3515).Z+"#gh-dark-mode-only",width:"2520",height:"760"})),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=dev")," to start the REST API in developer mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web server --mode=dev\n")),(0,r.kt)("h3",{id:"server-mode"},"Server Mode"),(0,r.kt)("p",null,'The server mode reflects the "traditional" mode of operation where VAST binds to\na network interface. This mode only accepts HTTPS connections and requires a\nvalid authentication token for every request. This is the default mode of\noperation.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - Server Mode",src:n(54117).Z+"#gh-light-mode-only",width:"2520",height:"1040"}),"\n",(0,r.kt)("img",{alt:"REST API - Server Mode",src:n(84174).Z+"#gh-dark-mode-only",width:"2520",height:"1040"})),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=server")," to start the REST API in server mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web server --mode=server\n")),(0,r.kt)("h3",{id:"upstream-tls-mode"},"Upstream TLS Mode"),(0,r.kt)("p",null,"The upstream TLS mode is suitable when VAST sits upstream of a separate\nTLS terminator that is running on the same machine. This kind of setup\nis commonly encountered when running nginx as a reverse proxy."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - TLS Upstream Mode",src:n(27536).Z+"#gh-light-mode-only",width:"2520",height:"1040"}),"\n",(0,r.kt)("img",{alt:"REST API - TLS Upstream Mode",src:n(99662).Z+"#gh-dark-mode-only",width:"2520",height:"1040"})),(0,r.kt)("p",null,"VAST only listens on localhost addresses, accepts plain HTTP but still\nchecks authentication tokens."),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=upstream")," to start the REST API in server mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web server --mode=upstream\n")),(0,r.kt)("h3",{id:"mutual-tls-mode"},"Mutual TLS Mode"),(0,r.kt)("p",null,"The mutual TLS mode is suitable when VAST sits upstream of a separate TLS\nterminator that may be running on a different machine. This setup is commonly\nencountered when running nginx as a load balancer. VAST would typically be\nconfigured to use a self-signed certificate in this setup."),(0,r.kt)("p",null,"VAST only accepts HTTPS requests, requires TLS client certificates for incoming\nconnections, and requires valid authentication tokens for any authenticated\nendpoints."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - Mutual TLS Mode",src:n(82463).Z+"#gh-light-mode-only",width:"2520",height:"1040"}),"\n",(0,r.kt)("img",{alt:"REST API - Mutual TLS Mode",src:n(75929).Z+"#gh-dark-mode-only",width:"2520",height:"1040"})),(0,r.kt)("p",null,"Pass ",(0,r.kt)("inlineCode",{parentName:"p"},"--mode=mtls")," to start the REST API in server mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vast web server --mode=mtls\n")),(0,r.kt)("h2",{id:"scaling"},"Scaling"),(0,r.kt)("p",null,"There are two ways to scale the REST API, shall it be the bottleneck. You can\neither spawn more REST API actors within VAST and expose them at different\nports, or you can spawn more dedicated web server processes:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"REST API - Multiple Deployments",src:n(42338).Z+"#gh-light-mode-only",width:"1440",height:"1220"}),"\n",(0,r.kt)("img",{alt:"REST API - Multiple Deployments",src:n(68263).Z+"#gh-dark-mode-only",width:"1440",height:"1220"})),(0,r.kt)("p",null,'We do not anticipate that the web frontend will be on the critical path, since\nthe web server itself performs very little work. But we get this form of scaling\n"for free" as a byproduct of VAST\'s ',(0,r.kt)("a",{parentName:"p",href:"/docs/understand/architecture/actor-model"},"actor model\narchitecture"),", which is why we\nmentioned it here."))}m.isMDXComponent=!0},68263:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-deployment-multiple.dark-f6dedbc136c62b7f47c61289a6d3af3e.png"},42338:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-deployment-multiple.light-cc8643e5b57f2313a9f17b333b7caf22.png"},62587:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-deployment-single.dark-eb29cf778bdaa5fb59b1873d68a20b93.png"},76691:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-deployment-single.light-fed8e9b8ade35e400f7388eb3c2a32eb.png"},3515:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-developer-mode.dark-b3a2f762c379dd0abb1cbbfa203e9276.png"},91827:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-developer-mode.light-60766982eb12a297b3deb95c04b80a0b.png"},75929:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-mutual-tls-mode.dark-5715245ac8297bd8d817aef8e199e951.png"},82463:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-mutual-tls-mode.light-4423e1676c97a32c4c61a876b3785f8c.png"},84174:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-server-mode.dark-75b5f073e9d1120888cf08e4aef75a87.png"},54117:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-server-mode.light-992a8065cc22f80d79dc06845ef1823f.png"},99662:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-tls-upstream-mode.dark-2b198f244c88e65c38422df095f23fe9.png"},27536:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rest-api-tls-upstream-mode.light-ab147a61386a4edb88a19533338995ed.png"}}]);