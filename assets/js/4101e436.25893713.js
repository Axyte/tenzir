"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[52482],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(t),f=a,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||o;return t?n.createElement(m,s(s({ref:r},c),{},{components:t})):n.createElement(m,s({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},36687:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>b,contentTitle:()=>v,default:()=>g,frontMatter:()=>m,metadata:()=>y,toc:()=>k});var n=t(3905),a=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))p.call(r,t)&&c(e,t,r[t]);if(i)for(var t of i(r))l.call(r,t)&&c(e,t,r[t]);return e},d=(e,r)=>o(e,s(r)),f=(e,r)=>{var t={};for(var n in e)p.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))r.indexOf(n)<0&&l.call(e,n)&&(t[n]=e[n]);return t};const m={},v="parse",y={unversionedId:"understand/operators/transformations/parse",id:"version-VAST v3.1/understand/operators/transformations/parse",title:"parse",description:"The parse operator converts raw bytes into events.",source:"@site/versioned_docs/version-VAST v3.1/understand/operators/transformations/parse.md",sourceDirName:"understand/operators/transformations",slug:"/understand/operators/transformations/parse",permalink:"/VAST v3.1/understand/operators/transformations/parse",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-VAST v3.1/understand/operators/transformations/parse.md",tags:[],version:"VAST v3.1",frontMatter:{},sidebar:"docsSidebar",previous:{title:"measure",permalink:"/VAST v3.1/understand/operators/transformations/measure"},next:{title:"pass",permalink:"/VAST v3.1/understand/operators/transformations/pass"}},b={},k=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;format&gt;</code>",id:"format",level:3},{value:"Examples",id:"examples",level:2}],O={toc:k},h="wrapper";function g(e){var r=e,{components:t}=r,a=f(r,["components"]);return(0,n.kt)(h,d(u(u({},O),a),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",u({},{id:"parse"}),"parse"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"parse")," operator converts raw bytes into events."),(0,n.kt)("admonition",u({},{title:"Expert Operator",type:"warning"}),(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"parse")," operator is a lower-level building block of the\n",(0,n.kt)("a",u({parentName:"p"},{href:"/VAST%20v3.1/understand/operators/sources/from"}),(0,n.kt)("inlineCode",{parentName:"a"},"from"))," and ",(0,n.kt)("a",u({parentName:"p"},{href:"/VAST%20v3.1/understand/operators/sources/read"}),(0,n.kt)("inlineCode",{parentName:"a"},"read"))," operators. Only\nuse this if you need to operate on the raw bytes themselves.")),(0,n.kt)("h2",u({},{id:"synopsis"}),"Synopsis"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"parse <format>\n")),(0,n.kt)("h2",u({},{id:"description"}),"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"parse")," operator parses events by interpreting its input bytes in a given\nformat."),(0,n.kt)("h3",u({},{id:"format"}),(0,n.kt)("inlineCode",{parentName:"h3"},"<format>")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",u({parentName:"p"},{href:"/VAST%20v3.1/understand/formats/"}),"format")," used to convert raw bytes into events."),(0,n.kt)("p",null,"Some formats have format-specific options. Please refer to the documentation of\nthe individual formats for more information."),(0,n.kt)("h2",u({},{id:"examples"}),"Examples"),(0,n.kt)("p",null,"Parse the input bytes as Zeek TSV logs:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"parse zeek-tsv\n")),(0,n.kt)("p",null,"Parse the input bytes as Suricata Eve JSON:"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"parse suricata\n")))}g.isMDXComponent=!0}}]);