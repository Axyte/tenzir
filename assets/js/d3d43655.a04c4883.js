"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[72768],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},26168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>h,default:()=>g,frontMatter:()=>m,metadata:()=>v,toc:()=>k});var r=n(3905),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(l)for(var n of l(t))s.call(t,n)&&c(e,n,t[n]);return e},u=(e,t)=>i(e,a(t)),f=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const m={},h="enrich",v={unversionedId:"operators/transformations/enrich",id:"version-Tenzir v4.6/operators/transformations/enrich",title:"enrich",description:"Enriches events with a context.",source:"@site/versioned_docs/version-Tenzir v4.6/operators/transformations/enrich.md",sourceDirName:"operators/transformations",slug:"/operators/transformations/enrich",permalink:"/operators/transformations/enrich",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-Tenzir v4.6/operators/transformations/enrich.md",tags:[],version:"Tenzir v4.6",frontMatter:{},sidebar:"docsSidebar",previous:{title:"drop",permalink:"/operators/transformations/drop"},next:{title:"enumerate",permalink:"/operators/transformations/enumerate"}},y={},k=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;name&gt;</code>",id:"name",level:3},{value:"<code>&lt;field&gt;</code>",id:"field",level:3},{value:"<code>&lt;options&gt;</code>",id:"options",level:3},{value:"Examples",id:"examples",level:2}],b={toc:k},O="wrapper";function g(e){var t=e,{components:n}=t,o=f(t,["components"]);return(0,r.kt)(O,u(d(d({},b),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",d({},{id:"enrich"}),"enrich"),(0,r.kt)("p",null,"Enriches events with a context."),(0,r.kt)("h2",d({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"enrich <name> [<options>]\nenrich <field>=<name> [<options>]\n")),(0,r.kt)("h2",d({},{id:"description"}),"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"enrich")," operator applies a context, extending input events with a new field\ndefined by the context."),(0,r.kt)("h3",d({},{id:"name"}),(0,r.kt)("inlineCode",{parentName:"h3"},"<name>")),(0,r.kt)("p",null,"The name of the context to enrich with."),(0,r.kt)("h3",d({},{id:"field"}),(0,r.kt)("inlineCode",{parentName:"h3"},"<field>")),(0,r.kt)("p",null,"The name of the field in which to store the context's enrichment. Defaults to\nthe name of the context."),(0,r.kt)("h3",d({},{id:"options"}),(0,r.kt)("inlineCode",{parentName:"h3"},"<options>")),(0,r.kt)("p",null,"Optional, context-specific options in the format ",(0,r.kt)("inlineCode",{parentName:"p"},"--key value")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"--flag"),"."),(0,r.kt)("p",null,"The following options are currently supported for the ",(0,r.kt)("inlineCode",{parentName:"p"},"lookup-table")," context:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--field <field>")," (required): The field in the input events to evaluate\nagainst the keys of the lookup table.")),(0,r.kt)("h2",d({},{id:"examples"}),"Examples"),(0,r.kt)("p",null,"Apply the ",(0,r.kt)("inlineCode",{parentName:"p"},"lookup-table")," context ",(0,r.kt)("inlineCode",{parentName:"p"},"feodo")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"suricata.flow")," events, using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"dest_ip")," field as the field to compare the context key against."),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'export\n| where #schema == "suricata.flow"\n| enrich feodo --field dest_ip\n')),(0,r.kt)("p",null,"To return only events that have a context, use:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'export\n| where #schema == "suricata.flow"\n| enrich feodo --field dest_ip\n| where feodo.key != null\n')))}g.isMDXComponent=!0}}]);