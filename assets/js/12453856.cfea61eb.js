"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[78611],{41837:e=>{e.exports=JSON.parse('{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.0.0","info":{"title":"VAST Rest API","version":"\\"0.1\\"","description":"\\nThis API can be used to interact with a VAST Node in a RESTful manner.\\n\\nAll API requests must be authenticated with a valid token, which must be\\nsupplied in the `X-VAST-Token` request header. The token can be generated\\non the command-line using the `vast rest generate-token` command."},"servers":[{"url":"https://vast.example.com/api/v0"}],"security":[{"VastToken":[]}],"components":{"schemas":{"Diagnostics":{"type":"array","items":{"$ref":"#/components/schemas/Diagnostic"}},"Diagnostic":{"type":"object","properties":{"severity":{"type":"string","enum":["error","warning","note"]},"message":{"type":"string","example":"unknown option `--frobnify`"},"annotation":{"type":"array","items":{"$ref":"#/components/schemas/Annotation"}},"notes":{"type":"array","items":{"$ref":"#/components/schemas/Note"}}}},"Annotation":{"type":"object","properties":{"primary":{"type":"boolean"},"text":{"type":"string","example":"this option does not exist","description":"A potentially empty label."},"source":{"$ref":"#/components/schemas/Location"}}},"Note":{"type":"object","properties":{"kind":{"type":"string","enum":["note","usage","hint","docs"],"example":"usage"},"message":{"type":"string","example":"file <path> [-f|--follow] [-m|--mmap] [-t|--timeout <duration>]"}}},"Location":{"type":"object","description":"A region in the source code, defined by byte offsets.","properties":{"begin":{"type":"number","example":42},"end":{"type":"number","example":48}}},"PipelineInfo":{"type":"object","properties":{"id":{"type":"string","description":"The pipeline ID."},"name":{"type":"string","description":"The human-readable name of the pipeline."},"definition":{"type":"string","description":"The pipeline definition."},"state":{"type":"string","enum":["starting","running","stopping","stopped"]},"error":{"type":"string","description":"The error that the pipeline may have encountered during running."},"delete_when_stopped":{"type":"boolean","description":"A flag specifying whether this pipeline is implicitly removed once it is terminated."},"restart_with_node":{"type":"boolean","description":"A flag specifying whether this pipeline should start upon launching the parent node.","default":false},"operators":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The pipeline operator ID."},"definition":{"type":"string","description":"The pipeline operator definition."},"instrumented":{"type":"boolean","description":"Flag that enables subscribing to this operator\'s metrics and warnings under /pipeline/(pipeline-id)/(operator-id)."}}}},"diagnostics":{"$ref":"#/components/schemas/Diagnostics"}}}},"securitySchemes":{"VastToken":{"type":"apiKey","in":"header","name":"X-VAST-Token"}}},"paths":{"/pipeline/create":{"post":{"summary":"Create a new pipeline","description":"Creates a new pipeline. If `start_when_created` is `true`, the response is only sent after the pipeline was successfully started. If this fails, then the pipeline is immediately discarded, and the response contains the observed diagnostics.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["definition"],"properties":{"definition":{"type":"string","example":"export | where foo | publish /bar","description":"The pipeline definition."},"start_when_created":{"type":"boolean","description":"Start this pipeline upon creation.\\\\nThis parameter must be true if the \'hidden\' parameter is also true.","default":false},"name":{"type":"string","description":"The human-readable name of the pipeline.","default":"[an auto-generated id]","example":"zeek-monitoring-pipeline"},"hidden":{"type":"boolean","description":"A flag specifying whether this pipeline is hidden.\\\\nHidden pipelines are not persisted and will not show up in the /pipeline/list endpoint response.","default":false,"example":false},"delete_when_stopped":{"type":"boolean","description":"A flag specifying whether this pipeline is implicitly removed once it is terminated.\\\\nThis parameter must be true if the \'hidden\' parameter is also true.","default":false,"example":false},"ttl":{"type":"string","description":"A duration string specifying the maximum time for this pipeline to exist. No value means the pipeline is allowed to exist forever.\\\\nThis parameter must be defined if the \'hidden\' parameter is true.","default":null,"example":"5.0m"},"restart_with_node":{"type":"boolean","default":false,"description":"Check if the pipeline should be restarted when the VAST Node is restarted.\\\\nThis parameter must be false if the \'hidden\' parameter is true.","example":false}}}}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the successfully created pipeline."}}}}}},"400":{"description":"Invalid arguments or invalid pipeline.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."},"diagnostics":{"$ref":"#/components/schemas/Diagnostics"}}}}}}}}},"/pipeline/delete":{"post":{"summary":"Delete an existing pipeline","description":"Deletes an existing pipeline.","requestBody":{"description":"Body for the delete endpoint","required":true,"content":{"application/json":{"schema":{"type":"object","required":["id"],"properties":{"id":{"type":"string","example":7,"description":"The id of the pipeline to be deleted."}}}}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","example":{}}}}},"400":{"description":"Invalid arguments.","content":{"application/json":{"schema":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."}}}}}}}}},"/pipeline/list":{"post":{"summary":"List all existing pipelines","description":"Lists all existing pipelines.","responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","description":"An array of all pipelines with additional information about their singular operators in order of execution.","properties":{"pipelines":{"type":"array","items":{"$ref":"#/components/schemas/PipelineInfo"}}},"example":{"pipelines":[{"id":7,"name":"user-assigned-name","definition":"export | where foo | publish /bar","state":"starting","error":null,"delete_when_stopped":true,"restart_with_node":true,"operators":[{"id":0,"definition":"export","instrumented":false},{"id":1,"definition":"where foo","instrumented":true},{"id":2,"definition":"publish /bar","instrumented":true}]},{"id":8,"name":"wrong-pipeline","definition":"export asdf","state":"stopped","error":"format \'asdf\' not found","delete_when_stopped":false,"restart_with_node":false,"operators":[{"id":0,"definition":"export asdf","instrumented":false}]}]}}}}},"400":{"description":"Invalid arguments.","content":{"application/json":{"schema":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."}}}}}}}}},"/pipeline/reset-ttl":{"post":{"summary":"Reset the TTL of an existing pipeline","description":"Resets the TTL of an existing pipeline as specified, if one has been specified in the /create endpoint before.\\\\nResetting the TTL means that the TTL-related timeout will start counting from zero seconds again, thus keeping the pipeline alive for longer.","requestBody":{"description":"Body for the reset-ttl endpoint","required":true,"content":{"application/json":{"schema":{"type":"object","required":["ids"],"properties":{"ids":{"type":"array","items":{"type":"string"},"example":[7,1,3],"description":"The id of pipelines whose TTL should be updated."}}}}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","properties":{"ids":{"type":"array","items":{"type":"string"},"example":[7,1],"description":"The id of pipelines whose TTL has been successfully updated."}}}}}},"400":{"description":"Invalid arguments.","content":{"application/json":{"schema":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."}}}}}}}}},"/pipeline/update":{"post":{"summary":"Update pipeline state","description":"Update the state of the pipeline.\\nAll values that are not explicitly included in the request are left in their\\nold state.\\n","requestBody":{"description":"Body for the update endpoint","required":true,"content":{"application/json":{"schema":{"type":"object","required":["id"],"properties":{"id":{"type":"string","example":7,"description":"The id of the pipeline to be updated."},"action":{"type":"string","enum":["start","stop"],"description":"The action that will change the pipeline\'s running state.","example":"start"},"name":{"type":"string","description":"Update the human-readable name of the pipeline to this value.","example":"zeek-monitoring-pipeline"},"restart_with_node":{"type":"boolean","description":"Flag that specifies whether the pipeline should be restarted when the VAST Node is restarted."},"delete_when_stopped":{"type":"boolean","description":"Flag that specifies whether the pipeline should self-destruct after it stopped."}}}}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","description":"The updated pipeline.","properties":{"pipeline":{"$ref":"#/components/schemas/PipelineInfo"}}}}}},"400":{"description":"Invalid arguments.","content":{"application/json":{"schema":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."}}}}}}}}},"/serve":{"post":{"summary":"Return data from a pipeline","description":"Returns events from an existing pipeline. The pipeline definition must include a serve operator.","requestBody":{"description":"Body for the serve endpoint","required":true,"content":{"application/json":{"schema":{"type":"object","required":["serve_id"],"properties":{"serve_id":{"type":"string","example":"query1","description":"The id that was passed to the serve operator."},"continuation_token":{"type":"string","example":"340ce2j","description":"The continuation token that was returned with the last response. For the initial request this is null."},"max_events":{"type":"integer","example":50,"description":"The maximum number of events returned. If unset, the number is unlimited."},"timeout":{"type":"string","example":"100.0ms","default":"100.0ms","description":"The maximum amount of time spent on the request. Hitting the timeout is not an error. The timeout must not be greater than 5 seconds."}}}}}},"responses":{"200":{"description":"Success.","content":{"application/json":{"schema":{"type":"object","properties":{"next_continuation_token":{"type":"string","description":"A token to access the next pipeline data batch, null if the pipeline is completed.","example":"340ce2j"},"schemas":{"type":"array","items":{"type":"object","properties":{"schema_id":{"type":"string","description":"The unique schema identifier."},"definition":{"type":"object","description":"The schema definition in JSON format."}}},"description":"The schemas that the served events are based on.","example":[{"schema_id":"c631d301e4b18f4","definition":{"record":[{"timestamp":"time","schema":"string","schema_id":"string","events":"uint64"}]}}]},"data":{"type":"array","items":{"type":"object","properties":{"schema_id":{"type":"string","description":"The unique schema identifier."},"data":{"type":"object","description":"The actual served data in JSON format."}}},"description":"The served events.","example":[{"schema_id":"c631d301e4b18f4","data":{"timestamp":"2023-04-26T12:00:00.000000","schema":"zeek.conn","schema_id":"ab2371bas235f1","events":50}},{"schema_id":"c631d301e4b18f4","data":{"timestamp":"2023-04-26T12:05:00.000000","schema":"suricata.dns","schema_id":"cd4771bas235f1","events":50}}]}}}}}},"400":{"description":"Invalid arguments.","content":{"application/json":{"schema":{"type":"object","required":["error"],"properties":{"error":{"type":"string","example":"Invalid arguments","description":"The error message."}}}}}}}}},"/status":{"post":{"summary":"Return current status","description":"Returns the current status of the whole node.","requestBody":{"description":"Body for the status endpoint","required":false,"content":{"application/json":{"schema":{"type":"object","properties":{"component":{"type":"string","description":"If specified, return the status for that component only.","example":"index"},"verbosity":{"type":"string","enum":["info","detailed","debug"],"default":"info"}}}}}},"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"type":"object"},"example":{"catalog":{"num-partitions":7092,"memory-usage":52781901584},"version":{"VAST":"v2.3.0-rc3-32-g8529a6c43f"}}}}},"401":{"description":"Not authenticated."}}}}}}}')}}]);