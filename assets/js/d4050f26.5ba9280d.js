"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29933],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=f;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[d]="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},57739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>k,default:()=>O,frontMatter:()=>m,metadata:()=>y,toc:()=>v});var r=n(3905),o=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(a)for(var n of a(t))s.call(t,n)&&p(e,n,t[n]);return e},u=(e,t)=>i(e,l(t)),f=(e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&a)for(var r of a(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const m={},k="tcp",y={unversionedId:"connectors/tcp",id:"connectors/tcp",title:"tcp",description:"Loads bytes from a TCP or TLS connection.",source:"@site/docs/connectors/tcp.md",sourceDirName:"connectors",slug:"/connectors/tcp",permalink:"/next/connectors/tcp",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/connectors/tcp.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"stdout",permalink:"/next/connectors/stdout"},next:{title:"zmq",permalink:"/next/connectors/zmq"}},h={},v=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;endpoint&gt;</code>",id:"endpoint",level:3},{value:"<code>-l,--listen</code>",id:"-l--listen",level:3},{value:"<code>-k,--keep-listening</code>",id:"-k--keep-listening",level:3},{value:"<code>--tls</code>",id:"--tls",level:3},{value:"<code>--certfile</code>",id:"--certfile",level:3},{value:"<code>--keyfile</code>",id:"--keyfile",level:3},{value:"Examples",id:"examples",level:2},{value:"Connect",id:"connect",level:3},{value:"Listen",id:"listen",level:3}],b={toc:v},g="wrapper";function O(e){var t=e,{components:n}=t,o=f(t,["components"]);return(0,r.kt)(g,u(d(d({},b),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",d({},{id:"tcp"}),"tcp"),(0,r.kt)("p",null,"Loads bytes from a TCP or TLS connection."),(0,r.kt)("h2",d({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"tcp [-l] [-k] [--tls] [--certfile] [--keyfile] <endpoint>\n")),(0,r.kt)("h2",d({},{id:"description"}),"Description"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"tcp")," loader establishes a TCP or TLS connection and reads bytes from it."),(0,r.kt)("p",null,"It can either connect to a remote endpoint, or listen on a given address and\nwait for incoming connections."),(0,r.kt)("h3",d({},{id:"endpoint"}),(0,r.kt)("inlineCode",{parentName:"h3"},"<endpoint>")),(0,r.kt)("p",null,"The address of the remote endpoint, or the bind address if ",(0,r.kt)("inlineCode",{parentName:"p"},"--listen")," is\nspecified."),(0,r.kt)("h3",d({},{id:"-l--listen"}),(0,r.kt)("inlineCode",{parentName:"h3"},"-l,--listen")),(0,r.kt)("p",null,"Ignore any predefined credentials and try to load/save with anonymous\ncredentials."),(0,r.kt)("h3",d({},{id:"-k--keep-listening"}),(0,r.kt)("inlineCode",{parentName:"h3"},"-k,--keep-listening")),(0,r.kt)("p",null,"When a connection is closed, wait for another incoming connection instead of\nclosing the pipeline. Requires ",(0,r.kt)("inlineCode",{parentName:"p"},"--listen"),"."),(0,r.kt)("h3",d({},{id:"--tls"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--tls")),(0,r.kt)("p",null,"Wrap the connection into a TLS secured stream."),(0,r.kt)("h3",d({},{id:"--certfile"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--certfile")),(0,r.kt)("p",null,"Path to a ",(0,r.kt)("inlineCode",{parentName:"p"},".pem")," file containing the TLS certificate for the server.\nIgnored unless ",(0,r.kt)("inlineCode",{parentName:"p"},"--tls")," is also specified."),(0,r.kt)("h3",d({},{id:"--keyfile"}),(0,r.kt)("inlineCode",{parentName:"h3"},"--keyfile")),(0,r.kt)("p",null,"Path to a ",(0,r.kt)("inlineCode",{parentName:"p"},".pem")," file containing the private key for the certificate.\nIgnored unless ",(0,r.kt)("inlineCode",{parentName:"p"},"--tls")," is also specified."),(0,r.kt)("h2",d({},{id:"examples"}),"Examples"),(0,r.kt)("h3",d({},{id:"connect"}),"Connect"),(0,r.kt)("p",null,"Read raw bytes by connecting to a TCP endpoint:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"load tcp://127.0.0.1:8000\n")),(0,r.kt)("p",null,"Test this locally by spinning up a local server with netcat:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"echo foo | nc -N -l 127.0.0.1 8000\n")),(0,r.kt)("h3",d({},{id:"listen"}),"Listen"),(0,r.kt)("p",null,"Listen on localhost and wait for incoming TLS connections:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"load tcp://127.0.0.1:4000 --listen --certfile ./key_and_cert.pem --keyfile ./key_and_cert.pem -k\n")),(0,r.kt)("p",null,"The above example uses a self-signed certificate that can be generated like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"openssl req -x509 -newkey rsa:2048 -keyout key_and_cert.pem -out key_and_cert.pem -days 365 -nodes\n\nTest the endpoint locally by issuing a TLS connection:\n```bash\nopenssl s_client 127.0.0.1:4000\n")))}O.isMDXComponent=!0}}]);