"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1085],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},66992:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={},l="hash",i={unversionedId:"understand/query-language/operators/hash",id:"understand/query-language/operators/hash",title:"hash",description:"Computes a SHA256 hash digest of a given field.",source:"@site/docs/understand/query-language/operators/hash.md",sourceDirName:"understand/query-language/operators",slug:"/understand/query-language/operators/hash",permalink:"/docs/understand/query-language/operators/hash",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/understand/query-language/operators/hash.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"extend",permalink:"/docs/understand/query-language/operators/extend"},next:{title:"head",permalink:"/docs/understand/query-language/operators/head"}},s={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Salt",id:"salt",level:3},{value:"Field",id:"field",level:3},{value:"Example",id:"example",level:2},{value:"YAML Syntax Example",id:"yaml-syntax-example",level:2}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hash"},"hash"),(0,r.kt)("p",null,"Computes a SHA256 hash digest of a given field."),(0,r.kt)("admonition",{title:"Experimental",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"We plan to change the ",(0,r.kt)("inlineCode",{parentName:"p"},"hash")," operator into a function usable in an upcoming\n",(0,r.kt)("inlineCode",{parentName:"p"},"put")," operator, removing the need for ",(0,r.kt)("inlineCode",{parentName:"p"},"hash")," as an operator.")),(0,r.kt)("h2",{id:"synopsis"},"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"hash (-s|--salt=STRING) FIELD\n")),(0,r.kt)("h3",{id:"salt"},"Salt"),(0,r.kt)("p",null,"A salt value for the hash."),(0,r.kt)("h3",{id:"field"},"Field"),(0,r.kt)("p",null,"The field name over which the hash is computed."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Hash all values of the field ",(0,r.kt)("inlineCode",{parentName:"p"},"username")," using the salt value ",(0,r.kt)("inlineCode",{parentName:"p"},'"xxx"')," and store\nthe digest in a new field ",(0,r.kt)("inlineCode",{parentName:"p"},"username_hashed"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'hash --salt="B3IwnumKPEJDAA4u" username\n')),(0,r.kt)("h2",{id:"yaml-syntax-example"},"YAML Syntax Example"),(0,r.kt)("admonition",{title:"Deprecated",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The YAML syntax is deprecated since VAST v3.0, and will be removed in a future\nrelease. Please use the pipeline syntax instead.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'hash:\n  field: username\n  out: pseudonym\n  salt: "B3IwnumKPEJDAA4u"\n')))}d.isMDXComponent=!0}}]);