"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[65588],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65525:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>v,default:()=>k,frontMatter:()=>f,metadata:()=>y,toc:()=>h});var r=n(3905),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,d=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(i)for(var n of i(t))s.call(t,n)&&c(e,n,t[n]);return e},u=(e,t)=>l(e,o(t)),m=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const f={},v="replace",y={unversionedId:"understand/language/operators/replace",id:"version-VAST v3.0/understand/language/operators/replace",title:"replace",description:"Replaces the fields matching the configured extractors with fixed values.",source:"@site/versioned_docs/version-VAST v3.0/understand/language/operators/replace.md",sourceDirName:"understand/language/operators",slug:"/understand/language/operators/replace",permalink:"/VAST v3.0/understand/language/operators/replace",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/versioned_docs/version-VAST v3.0/understand/language/operators/replace.md",tags:[],version:"VAST v3.0",frontMatter:{},sidebar:"docsSidebar",previous:{title:"rename",permalink:"/VAST v3.0/understand/language/operators/rename"},next:{title:"select",permalink:"/VAST v3.0/understand/language/operators/select"}},g={},h=[{value:"Synopsis",id:"synopsis",level:2},{value:"Fields",id:"fields",level:3},{value:"Example",id:"example",level:3},{value:"YAML Syntax Example",id:"yaml-syntax-example",level:4}],b={toc:h},x="wrapper";function k(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(x,u(d(d({},b),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",d({},{id:"replace"}),"replace"),(0,r.kt)("p",null,"Replaces the fields matching the configured extractors with fixed values."),(0,r.kt)("admonition",d({},{title:"Experimental",type:"warning"}),(0,r.kt)("p",{parentName:"admonition"},"We plan to merge the ",(0,r.kt)("inlineCode",{parentName:"p"},"extend")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"replace")," operators into a single ",(0,r.kt)("inlineCode",{parentName:"p"},"put"),"\noperator in the near future, removing the need for the ",(0,r.kt)("inlineCode",{parentName:"p"},"replace")," operator.")),(0,r.kt)("h2",d({},{id:"synopsis"}),"Synopsis"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),"replace FIELDS=VALUE[, \u2026]\n")),(0,r.kt)("h3",d({},{id:"fields"}),"Fields"),(0,r.kt)("p",null,"The fields to replace with fixed values."),(0,r.kt)("h3",d({},{id:"example"}),"Example"),(0,r.kt)("p",null,"Replace all values of the field named ",(0,r.kt)("inlineCode",{parentName:"p"},"secret")," with the string value ",(0,r.kt)("inlineCode",{parentName:"p"},'"xxx"'),",\nall values of the field named ",(0,r.kt)("inlineCode",{parentName:"p"},"ints")," with the list of integers value ",(0,r.kt)("inlineCode",{parentName:"p"},"[1, 2,\n3]"),", and all values of the field named ",(0,r.kt)("inlineCode",{parentName:"p"},"strs")," with the list of strings value\n",(0,r.kt)("inlineCode",{parentName:"p"},'["a", "b", "c"]'),":"),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{}),'replace secret="xxx", ints=[1, 2, 3], strs=["a", "b", "c"]\n')),(0,r.kt)("h4",d({},{id:"yaml-syntax-example"}),"YAML Syntax Example"),(0,r.kt)("admonition",d({},{title:"Deprecated",type:"info"}),(0,r.kt)("p",{parentName:"admonition"},"The YAML syntax is deprecated since VAST v3.0, and will be removed in a future\nrelease. Please use the pipeline syntax instead.")),(0,r.kt)("pre",null,(0,r.kt)("code",d({parentName:"pre"},{className:"language-yaml"}),"replace:\n  fields:\n    secret: xxx\n    ints:\n      - 1\n      - 2\n      - 3\n")))}k.isMDXComponent=!0}}]);