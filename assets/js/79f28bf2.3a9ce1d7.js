"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8882],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>f});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=t.createContext({}),l=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},c=function(e){var r=l(e.components);return t.createElement(p.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return n?t.createElement(f,s(s({ref:r},c),{},{components:n})):t.createElement(f,s({ref:r},c))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},34424:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=n(87462),a=(n(67294),n(3905));const o={},s="rename",i={unversionedId:"understand/query-language/operators/rename",id:"understand/query-language/operators/rename",title:"rename",description:"Renames schemas and fields according to a configured mapping.",source:"@site/docs/understand/query-language/operators/rename.md",sourceDirName:"understand/query-language/operators",slug:"/understand/query-language/operators/rename",permalink:"/docs/understand/query-language/operators/rename",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/understand/query-language/operators/rename.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"pseudonymize",permalink:"/docs/understand/query-language/operators/pseudonymize"},next:{title:"replace",permalink:"/docs/understand/query-language/operators/replace"}},p={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Names",id:"names",level:3},{value:"Example",id:"example",level:2},{value:"YAML Syntax Example",id:"yaml-syntax-example",level:2}],c={toc:l},u="wrapper";function d(e){let{components:r,...n}=e;return(0,a.kt)(u,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rename"},"rename"),(0,a.kt)("p",null,"Renames schemas and fields according to a configured mapping."),(0,a.kt)("h2",{id:"synopsis"},"Synopsis"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rename NAME=EXTRACTOR[, \u2026]\n")),(0,a.kt)("h3",{id:"names"},"Names"),(0,a.kt)("p",null,"An assignment for a new name from an existing extractor. Use type extractors to\nrename schemas."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Rename the ",(0,a.kt)("inlineCode",{parentName:"p"},"suricata.flow")," schema to ",(0,a.kt)("inlineCode",{parentName:"p"},"my.connection"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"src_port")," field to\n",(0,a.kt)("inlineCode",{parentName:"p"},"source_port")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"src_ip")," field to ",(0,a.kt)("inlineCode",{parentName:"p"},"source_address"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"rename my.connection=:suricata.flow, source_port=src_port, source_address=src_ip\n")),(0,a.kt)("h2",{id:"yaml-syntax-example"},"YAML Syntax Example"),(0,a.kt)("admonition",{title:"Deprecated",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The YAML syntax is deprecated since VAST v3.0, and will be removed in a future\nrelease. Please use the pipeline syntax instead.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"rename:\n  schemas:\n    - from: suricata.flow\n      to: suricata.renamed-flow\n  fields:\n    - from: src_port\n      to: source_port\n    - from: src_ip\n      to: source_address\n")))}d.isMDXComponent=!0}}]);