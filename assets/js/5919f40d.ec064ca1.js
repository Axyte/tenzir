"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[47936],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,k=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9921:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>g,default:()=>N,frontMatter:()=>k,metadata:()=>v,toc:()=>h});var r=n(3905),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&u(e,n,t[n]);if(l)for(var n of l(t))s.call(t,n)&&u(e,n,t[n]);return e},d=(e,t)=>o(e,i(t)),m=(e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n};const k={sidebar_position:0},g="Docker",v={unversionedId:"setup/deploy/docker",id:"version-VAST v3.0/setup/deploy/docker",title:"Docker",description:"Our Docker image contains a dynamic of VAST build with plugins as shared",source:"@site/versioned_docs/version-VAST v3.0/setup/deploy/docker.md",sourceDirName:"setup/deploy",slug:"/setup/deploy/docker",permalink:"/docs/VAST v3.0/setup/deploy/docker",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/main/web/versioned_docs/version-VAST v3.0/setup/deploy/docker.md",tags:[],version:"VAST v3.0",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Deploy",permalink:"/docs/VAST v3.0/setup/deploy/"},next:{title:"Docker Compose",permalink:"/docs/VAST v3.0/setup/deploy/docker-compose"}},f={},h=[{value:"Pull the image",id:"pull-the-image",level:2},{value:"Start the container",id:"start-the-container",level:2},{value:"Configure a VAST container",id:"configure-a-vast-container",level:2},{value:"Build your own VAST image",id:"build-your-own-vast-image",level:2},{value:"Build the production image",id:"build-the-production-image",level:3},{value:"Build the development image",id:"build-the-development-image",level:3}],b={toc:h},y="wrapper";function N(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(y,d(c(c({},b),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",c({},{id:"docker"}),"Docker"),(0,r.kt)("p",null,"Our Docker image contains a dynamic of VAST build with plugins as shared\nlibraries. The system user ",(0,r.kt)("inlineCode",{parentName:"p"},"vast")," runs the VAST executable with limited\nprivileges. Database contents go into the volume exposed at ",(0,r.kt)("inlineCode",{parentName:"p"},"/var/lib/vast"),"."),(0,r.kt)("p",null,"Make sure you have the appropriate Docker runtime setup, e.g., ",(0,r.kt)("a",c({parentName:"p"},{href:"https://www.docker.com/products/docker-desktop/"}),"Docker\nDesktop")," or ",(0,r.kt)("a",c({parentName:"p"},{href:"https://docs.docker.com/engine/"}),"Docker\nEngine"),"."),(0,r.kt)("admonition",c({},{title:"CPU & RAM",type:"tip"}),(0,r.kt)("p",{parentName:"admonition"},"Make sure Docker has enough multiple CPU cores and several GBs of RAM.")),(0,r.kt)("h2",c({},{id:"pull-the-image"}),"Pull the image"),(0,r.kt)("p",null,"Retrieving a dockerized version of VAST only requires pulling a pre-built image\nfrom our ",(0,r.kt)("a",c({parentName:"p"},{href:"https://hub.docker.com/repository/docker/tenzir/vast"}),"container registry at DockerHub"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker pull tenzir/vast\n")),(0,r.kt)("p",null,"Thereafter, you're ready to start a VAST node in a container."),(0,r.kt)("h2",c({},{id:"start-the-container"}),"Start the container"),(0,r.kt)("p",null,"When running VAST in a container, you need to wire two resources for a practical\ndeployment:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Network"),": VAST exposes a listening socket to accept client commands."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Disk"),": VAST stores its database content on mounted volume.")),(0,r.kt)("p",null,"We recommend starting the VAST server detached in the background:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"mkdir -p /path/to/db\ndocker run -dt --name=vast --rm -p 5158:5158 -v /path/to/db:/var/lib/vast \\\n  tenzir/vast start\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"docker")," arguments have the following meaning:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-d")," for detaching, i.e., running in background"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-t")," for terminal output"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--name")," to name the image"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--rm")," to remove the container after exiting"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-p")," to expose the port to the outer world"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-v from:to")," to mount the local path ",(0,r.kt)("inlineCode",{parentName:"li"},"from")," into the container at ",(0,r.kt)("inlineCode",{parentName:"li"},"to"))),(0,r.kt)("p",null,"Now you are ready to interact with a running VAST node."),(0,r.kt)("h2",c({},{id:"configure-a-vast-container"}),"Configure a VAST container"),(0,r.kt)("p",null,"Configuration in the Docker ecosystem typically entails setting environment\nvariables. VAST supports this paradigm with a one-to-one ",(0,r.kt)("a",c({parentName:"p"},{href:"/docs/VAST%20v3.0/setup/configure#environment-variables"}),"mapping from\nconfiguration file entries to environment\nvariables"),"."),(0,r.kt)("p",null,"When starting the container, ",(0,r.kt)("inlineCode",{parentName:"p"},"docker run")," accepts variables either one by one\nvia ",(0,r.kt)("inlineCode",{parentName:"p"},"-e KEY=VALUE")," or via ",(0,r.kt)("inlineCode",{parentName:"p"},"--env-file FILE"),". You can also pass down an existing\nenvironment variable by specifying just ",(0,r.kt)("inlineCode",{parentName:"p"},"-e KEY")," without an assignment. Here is\nan example:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker run -e VAST_ENDPOINT -e VAST_IMPORT__BATCH_SIZE=42 --env-file .env \\\n  tenzir/vast start\n")),(0,r.kt)("h2",c({},{id:"build-your-own-vast-image"}),"Build your own VAST image"),(0,r.kt)("p",null,"You can always build your own Docker image in case our prebuilt images don't fit\nyour use case."),(0,r.kt)("p",null,"Our official ",(0,r.kt)("a",c({parentName:"p"},{href:"https://github.com/tenzir/vast/blob/main/Dockerfile"}),"Dockerfile"),"\noffers two starting points: a ",(0,r.kt)("em",{parentName:"p"},"development")," and ",(0,r.kt)("em",{parentName:"p"},"production")," layer."),(0,r.kt)("p",null,"Before building the image, make sure to fetch all submodules:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"git clone --recursive https://github.com/tenzir/vast\ncd vast\n")),(0,r.kt)("h3",c({},{id:"build-the-production-image"}),"Build the production image"),(0,r.kt)("p",null,"The production image is optimized for size and security. This is the official\n",(0,r.kt)("inlineCode",{parentName:"p"},"tenzir/vast")," image. From the repository root, build it as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker build -t tenzir/vast .\n")),(0,r.kt)("h3",c({},{id:"build-the-development-image"}),"Build the development image"),(0,r.kt)("p",null,"The development image ",(0,r.kt)("inlineCode",{parentName:"p"},"tenzir/vast-dev")," contains all build-time dependencies of\nVAST. It runs with a ",(0,r.kt)("inlineCode",{parentName:"p"},"root")," user to allow for building custom images that build\nadditional VAST plugins. By default, VAST loads all installed plugins in our\nimages."),(0,r.kt)("p",null,"Build the development image by specifying it as ",(0,r.kt)("inlineCode",{parentName:"p"},"--target"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker build -t tenzir/vast-dev --target development .\n")))}N.isMDXComponent=!0}}]);