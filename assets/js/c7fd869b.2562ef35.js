"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86640],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>m});var n=o(67294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(o),f=r,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||i;return o?n.createElement(m,a(a({ref:t},c),{},{components:o})):n.createElement(m,a({ref:t},c))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}f.displayName="MDXCreateElement"},42448:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>v,contentTitle:()=>h,default:()=>g,frontMatter:()=>m,metadata:()=>k,toc:()=>y});var n=o(3905),r=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,c=(e,t,o)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,u=(e,t)=>{for(var o in t||(t={}))p.call(t,o)&&c(e,o,t[o]);if(l)for(var o of l(t))s.call(t,o)&&c(e,o,t[o]);return e},d=(e,t)=>i(e,a(t)),f=(e,t)=>{var o={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(o[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&s.call(e,n)&&(o[n]=e[n]);return o};const m={sidebar_custom_props:{operator:{source:!0}}},h="lookup",k={unversionedId:"operators/lookup",id:"operators/lookup",title:"lookup",description:"Performs live filtering of the import feed using a context,",source:"@site/docs/operators/lookup.md",sourceDirName:"operators",slug:"/operators/lookup",permalink:"/next/operators/lookup",draft:!1,editUrl:"https://github.com/tenzir/tenzir/tree/main/web/docs/operators/lookup.md",tags:[],version:"current",frontMatter:{sidebar_custom_props:{operator:{source:!0}}},sidebar:"docsSidebar",previous:{title:"load",permalink:"/next/operators/load"},next:{title:"measure",permalink:"/next/operators/measure"}},v={},y=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"<code>&lt;context&gt;</code>",id:"context",level:3},{value:"<code>&lt;field&gt;</code>",id:"field",level:3},{value:"<code>&lt;options&gt;</code>",id:"options",level:3},{value:"<code>--live</code>",id:"--live",level:3},{value:"<code>--retro</code>",id:"--retro",level:3},{value:"<code>--snapshot</code>",id:"--snapshot",level:3},{value:"Examples",id:"examples",level:2}],b={toc:y},x="wrapper";function g(e){var t=e,{components:o}=t,r=f(t,["components"]);return(0,n.kt)(x,d(u(u({},b),r),{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",u({},{id:"lookup"}),"lookup"),(0,n.kt)("p",null,"Performs live filtering of the import feed using a ",(0,n.kt)("a",u({parentName:"p"},{href:"/next/contexts"}),"context"),",\nand translates context updates into historical queries."),(0,n.kt)("h2",u({},{id:"synopsis"}),"Synopsis"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"lookup <context> [<options>] [--live] [--retro] [--snapshot]\nlookup <field>=<context> [<options>] [--live] [--retro] [--snapshot]\n")),(0,n.kt)("h2",u({},{id:"description"}),"Description"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"lookup")," operator performs two actions simultaneously:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Translate context updates into historical queries"),(0,n.kt)("li",{parentName:"ol"},"Filter all data with a context that gets ingested into a node")),(0,n.kt)("p",null,"These two operations combined offer ",(0,n.kt)("em",{parentName:"p"},"unified matching"),", i.e., automated retro\nmatching by turning context updates into historical queries, and live matching\nwith a context on the import feed."),(0,n.kt)("h3",u({},{id:"context"}),(0,n.kt)("inlineCode",{parentName:"h3"},"<context>")),(0,n.kt)("p",null,"The name of the context to lookup with."),(0,n.kt)("h3",u({},{id:"field"}),(0,n.kt)("inlineCode",{parentName:"h3"},"<field>")),(0,n.kt)("p",null,"The name of the field in which to store the context's enrichment."),(0,n.kt)("p",null,"Defaults to the name of the context."),(0,n.kt)("h3",u({},{id:"options"}),(0,n.kt)("inlineCode",{parentName:"h3"},"<options>")),(0,n.kt)("p",null,"Optional, context-specific options. Refer to the ",(0,n.kt)("a",u({parentName:"p"},{href:"/next/operators/enrich"}),(0,n.kt)("inlineCode",{parentName:"a"},"enrich")," operator\ndocumentation")," for more details."),(0,n.kt)("h3",u({},{id:"--live"}),(0,n.kt)("inlineCode",{parentName:"h3"},"--live")),(0,n.kt)("p",null,"Enables live lookup for incoming events."),(0,n.kt)("p",null,"By default, both retro and live lookups are enabled. Specifying either ",(0,n.kt)("inlineCode",{parentName:"p"},"--retro"),"\nor ",(0,n.kt)("inlineCode",{parentName:"p"},"--live")," explicitly disables the other."),(0,n.kt)("h3",u({},{id:"--retro"}),(0,n.kt)("inlineCode",{parentName:"h3"},"--retro")),(0,n.kt)("p",null,"Enables retrospective lookups for previously imported events. The ",(0,n.kt)("inlineCode",{parentName:"p"},"lookup"),"\noperator will then apply a context ",(0,n.kt)("a",u({parentName:"p"},{href:"/next/operators/context"}),"after a context update"),"."),(0,n.kt)("p",null,"By default, both retro and live lookups are enabled.\nSpecifying either ",(0,n.kt)("inlineCode",{parentName:"p"},"--retro")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"--live")," explicitly disables\nthe other."),(0,n.kt)("h3",u({},{id:"--snapshot"}),(0,n.kt)("inlineCode",{parentName:"h3"},"--snapshot")),(0,n.kt)("p",null,"Creates a snapshot of the context at the time of execution. In combination with\n",(0,n.kt)("inlineCode",{parentName:"p"},"--retro"),", this will commence a retrospective lookup with that current context\nstate."),(0,n.kt)("p",null,"By default, snapshotting is disabled. Not all contexts support this operation."),(0,n.kt)("h2",u({},{id:"examples"}),"Examples"),(0,n.kt)("p",null,"Apply the context ",(0,n.kt)("inlineCode",{parentName:"p"},"feodo")," to incoming ",(0,n.kt)("inlineCode",{parentName:"p"},"suricata.flow")," events."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),'lookup --live feodo --field=src_ip\n| where #schema == "suricata.flow"\n')),(0,n.kt)("p",null,"Apply the context ",(0,n.kt)("inlineCode",{parentName:"p"},"feodo")," to historical ",(0,n.kt)("inlineCode",{parentName:"p"},"suricata.flow")," events with every update\nto ",(0,n.kt)("inlineCode",{parentName:"p"},"feodo"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),'lookup --retro feodo --field=src_ip\n| where #schema == "suricata.flow"\n')),(0,n.kt)("p",null,"Apply the context ",(0,n.kt)("inlineCode",{parentName:"p"},"feodo")," to incoming ",(0,n.kt)("inlineCode",{parentName:"p"},"suricata.flow")," events, and also apply the\ncontext after an update to ",(0,n.kt)("inlineCode",{parentName:"p"},"feodo"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),'lookup feodo --field=src_ip\n| where #schema == "suricata.flow"\n')))}g.isMDXComponent=!0}}]);