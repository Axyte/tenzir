"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9052],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:1},o="Git and GitHub Workflow",s={unversionedId:"contribute/workflow",id:"contribute/workflow",title:"Git and GitHub Workflow",description:"The following diagram visualizes our branching model:",source:"@site/docs/contribute/workflow.md",sourceDirName:"contribute",slug:"/contribute/workflow",permalink:"/docs/contribute/workflow",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/docs/contribute/workflow.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Code of Conduct",permalink:"/docs/contribute/code-of-conduct"},next:{title:"Coding Style",permalink:"/docs/contribute/coding-style"}},l={},p=[{value:"Commit Messages",id:"commit-messages",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"git-and-github-workflow"},"Git and GitHub Workflow"),(0,r.kt)("p",null,"The following diagram visualizes our branching model:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/53797/156560785-c7279447-63eb-4428-9a11-9c90cc03acc8.png",alt:"Branching Model"})),(0,r.kt)("p",null,"Our git workflow looks as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," branch reflects the latest state of development, and should\nalways compile.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In case we need to release a hotfix, we use dedicated patch release branches.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"stable")," branch always points to the latest release that is not a release\ncandidate. It exists so support a streamlined workflow for some packaging\ntools (e.g., Nix).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For new features or fixes, use ",(0,r.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," with\na naming convention of ",(0,r.kt)("inlineCode",{parentName:"p"},"topic/description"),". After completing work in a topic\nbranch, check the following steps to prepare for a merge back into ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Squash your commits such that each commit reflects a self-contained change.\nYou can interactively rebase all commits in your current pull request with\n",(0,r.kt)("inlineCode",{parentName:"p"},"git rebase --interactive $(git merge-base origin/master HEAD)"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a pull request to ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," on GitHub.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Wait for the results of continuous integration tools and fix any reported\nissues.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Ask a maintainer to review your work when your changes merge cleanly. If\nyou don't want a specific maintainer's feedback, ask for a team review from\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/vast"},"tenzir/vast"),", or for more\nspecific aspects from\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/devops"},"tenzir/devops")," and\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/orgs/tenzir/teams/secops"},"tenzir/secops"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Address the feedback articulated during the review.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A maintainer will merge the topic branch into ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," after it passes the\ncode review.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Similarly, for features or fixes relating to a specific GitHub issue, use\n",(0,r.kt)("em",{parentName:"p"},"topic branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master")," with a naming convention of\n",(0,r.kt)("inlineCode",{parentName:"p"},"topic/XXX"),", replacing XXX with a short description of the issue.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Internally, we use ",(0,r.kt)("a",{parentName:"p",href:"https://shortcut.com/"},"Shortcut")," for project management,\nand employees are advised to create ",(0,r.kt)("em",{parentName:"p"},"story branches")," that branch off ",(0,r.kt)("inlineCode",{parentName:"p"},"master"),"\nwith a naming convention of ",(0,r.kt)("inlineCode",{parentName:"p"},"story/sc-XXX/description"),", replacing XXX with\nthe story number."))),(0,r.kt)("h2",{id:"commit-messages"},"Commit Messages"),(0,r.kt)("p",null,"Commit messages are formatted according to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/agis/git-style-guide"},"this git style\nguide"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'The first line succinctly summarizes the changes in no more than 50\ncharacters. It is capitalized and written in and imperative present tense:\ne.g., "Fix a bug" as opposed to "Fixes a bug" or "Fixed a bug". As a\nmnemonic, prepend "When applied, this commit will" to the commit summary and\ncheck if it builds a full sentence.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The first line does not contain a dot at the end. (Think of it as the header\nof the following description).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The second line is empty.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Optional long descriptions as full sentences begin on the third line,\nindented at 72 characters per line, explaining ",(0,r.kt)("em",{parentName:"p"},"why")," the change is needed,\n",(0,r.kt)("em",{parentName:"p"},"how")," it addresses the underlying issue, and what ",(0,r.kt)("em",{parentName:"p"},"side-effects")," it might\nhave."))))}u.isMDXComponent=!0}}]);