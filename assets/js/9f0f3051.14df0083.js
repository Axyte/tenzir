"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66981],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=d(a),c=r,k=m["".concat(o,".").concat(c)]||m[c]||u[c]||i;return a?n.createElement(k,l(l({ref:t},s),{},{components:a})):n.createElement(k,l({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[m]="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},19105:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>v,frontMatter:()=>k,metadata:()=>N,toc:()=>h});var n=a(3905),r=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,s=(e,t,a)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,m=(e,t)=>{for(var a in t||(t={}))o.call(t,a)&&s(e,a,t[a]);if(p)for(var a of p(t))d.call(t,a)&&s(e,a,t[a]);return e},u=(e,t)=>i(e,l(t)),c=(e,t)=>{var a={};for(var n in e)o.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&p)for(var n of p(e))t.indexOf(n)<0&&d.call(e,n)&&(a[n]=e[n]);return a};const k={sidebar_position:1},g="Build",N={unversionedId:"setup/build",id:"setup/build",title:"Build",description:"Tenzir uses CMake as build system. Aside from a modern C++20",source:"@site/docs/setup/build.md",sourceDirName:"setup",slug:"/setup/build",permalink:"/docs/next/setup/build",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/main/web/docs/setup/build.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Download",permalink:"/docs/next/setup/download"},next:{title:"Install",permalink:"/docs/next/setup/install/"}},b={},h=[{value:"Dependencies",id:"dependencies",level:2},{value:"Compile",id:"compile",level:2},{value:"Test",id:"test",level:2},{value:"Install",id:"install",level:2},{value:"Clean",id:"clean",level:2}],f={toc:h},y="wrapper";function v(e){var t=e,{components:a}=t,r=c(t,["components"]);return(0,n.kt)(y,u(m(m({},f),r),{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",m({},{id:"build"}),"Build"),(0,n.kt)("p",null,"Tenzir uses ",(0,n.kt)("a",m({parentName:"p"},{href:"https://cmake.org"}),"CMake")," as build system. Aside from a modern C++20\ncompiler, you need to ensure availability of the dependencies in the table\nbelow."),(0,n.kt)("admonition",m({},{title:"Deterministic Builds via Nix",type:"tip"}),(0,n.kt)("p",{parentName:"admonition"},"We provide a Nix flake to setup an environment in which all dependencies are\navailable. Run ",(0,n.kt)("inlineCode",{parentName:"p"},"nix develop")," inside the main source directory. You can also\ndelegate the entire build process to Nix by invoking ",(0,n.kt)("inlineCode",{parentName:"p"},"nix build"),", but be aware\nthat this method does not support incremental\nbuilds.")),(0,n.kt)("h2",m({},{id:"dependencies"}),"Dependencies"),(0,n.kt)("p",null,"Every ",(0,n.kt)("a",m({parentName:"p"},{href:"https://github.com/tenzir/tenzir/releases"}),"release")," of Tenzir includes an\n",(0,n.kt)("a",m({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Software_bill_of_materials"}),"SBOM")," in\n",(0,n.kt)("a",m({parentName:"p"},{href:"https://spdx.dev"}),"SPDX")," format that lists all dependencies and their versions."),(0,n.kt)("div",{align:"center",class:"padding-bottom--md"},(0,n.kt)("a",{class:"button button--md button--primary margin-right--md",href:"https://github.com/tenzir/tenzir/releases/latest/download/Tenzir.spdx"},"Latest SBOM")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",m({parentName:"tr"},{align:"center"}),"Required"),(0,n.kt)("th",m({parentName:"tr"},{align:"center"}),"Dependency"),(0,n.kt)("th",m({parentName:"tr"},{align:"center"}),"Version"),(0,n.kt)("th",m({parentName:"tr"},{align:null}),"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"C++ Compiler"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"C++20 required"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Tenzir is tested to compile with GCC >= 12.0 and Clang >= 15.0.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://cmake.org"}),"CMake")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 3.19"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Cross-platform tool for building, testing and packaging software.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/actor-framework/actor-framework"}),"CAF")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 0.18.7"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Implementation of the actor model in C++. (Bundled as submodule.)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://www.openssl.org"}),"OpenSSL")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Utilities for secure networking and cryptography.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://google.github.io/flatbuffers/"}),"FlatBuffers")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 1.12.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Memory-efficient cross-platform serialization library.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://www.boost.org"}),"Boost")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 1.81.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required as a general utility library.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://arrow.apache.org"}),"Apache Arrow")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 8.0.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for in-memory data representation. Must be built with Compute, Zstd and Parquet enabled.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/google/re2"}),"re2")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for regular expressione evaluation.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/jbeder/yaml-cpp"}),"yaml-cpp")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 0.6.2"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for reading YAML configuration files.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/simdjson/simdjson"}),"simdjson")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 3.1.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for high-performance JSON parsing. (Bundled as submodule.)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/gabime/spdlog"}),"spdlog")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 1.5"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for logging.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://fmt.dev"}),"fmt")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 8.1.1"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for formatted text output.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/Cyan4973/xxHash"}),"xxHash")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 0.8.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for computing fast hash digests.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/Tessil/robin-map"}),"robin-map")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 0.6.3"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Fast hash map and hash set using robin hood hashing. (Bundled as subtree.)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),"\u2713"),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/FastFloat/fast_float"}),"fast_float")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),">= 3.2.0"),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for parsing floating point numbers. (Bundled as submodule.)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://www.tcpdump.org"}),"libpcap")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for building the ",(0,n.kt)("inlineCode",{parentName:"td"},"pcap")," plugin.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/nodejs/http-parser"}),"http-parser")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for building the ",(0,n.kt)("inlineCode",{parentName:"td"},"web")," plugin.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://python-poetry.org"}),"poetry")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required for building the Python bindings.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"http://www.doxygen.org"}),"Doxygen")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required to build documentation for libtenzir.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:"center"}),(0,n.kt)("a",m({parentName:"td"},{href:"https://github.com/jgm/pandoc"}),"Pandoc")),(0,n.kt)("td",m({parentName:"tr"},{align:"center"})),(0,n.kt)("td",m({parentName:"tr"},{align:null}),"Required to build manpage for Tenzir.")))),(0,n.kt)("p",null,"The minimum specified versions reflect those versions that we use in CI and\nmanual testing. Older versions may still work in select cases."),(0,n.kt)("h2",m({},{id:"compile"}),"Compile"),(0,n.kt)("p",null,"Building Tenzir involves the following steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",m({parentName:"p"},{href:"/docs/next/setup/download"}),"Download the latest release")," or clone the repository\nrecursively:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/tenzir/tenzir\ncd tenzir\ngit submodule update --init --recursive -- libtenzir plugins\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Configure the build with CMake. For faster builds, we recommend passing\n",(0,n.kt)("inlineCode",{parentName:"p"},"-G Ninja")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"cmake"),"."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),'cmake -B build\n# CMake defaults to a "Debug" build. When performance matters, use "Release"\ncmake -B build -DCMAKE_BUILD_TYPE=Release  \n')),(0,n.kt)("p",{parentName:"li"},"Optionally, you can use the CMake TUI to visually configure the build:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"ccmake build\n")),(0,n.kt)("p",{parentName:"li"},"The source tree also contains a set of CMake presets that combine various\nconfiguration options into curated build flavors. You can list them with:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cmake --list-presets\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Build the executable:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cmake --build build --target all\n")))),(0,n.kt)("h2",m({},{id:"test"}),"Test"),(0,n.kt)("p",null,"After you have built the executable, run the unit and integration tests to\nverify that your build works as expected:"),(0,n.kt)("ol",m({},{start:4}),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run component-level unit tests:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"ctest --test-dir build\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run end-to-end integration tests:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cmake --build build --target integration\n")))),(0,n.kt)("h2",m({},{id:"install"}),"Install"),(0,n.kt)("ol",m({},{start:6}),(0,n.kt)("li",{parentName:"ol"},"Install Tenzir system-wide.",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cmake --install build\n")))),(0,n.kt)("p",null,"If you prefer to install into a custom install prefix, install with ",(0,n.kt)("inlineCode",{parentName:"p"},"--prefix\n/path/to/install/prefix"),"."),(0,n.kt)("p",null,"To remove debug symbols from the installed binaries and libraries, pass\n",(0,n.kt)("inlineCode",{parentName:"p"},"--strip"),"."),(0,n.kt)("p",null,"To install only files relevant for running Tenzir and not for plugin development\npass ",(0,n.kt)("inlineCode",{parentName:"p"},"--component Runtime"),"."),(0,n.kt)("h2",m({},{id:"clean"}),"Clean"),(0,n.kt)("p",null,"In case you want to make changes to your build environment, we recommend\ndeleting the build tree entirely:"),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"rm -rf build\n")),(0,n.kt)("p",null,"This avoids subtle configuration glitches of transitive dependencies. For\nexample, CMake doesn't disable assertions when switching from a ",(0,n.kt)("inlineCode",{parentName:"p"},"Debug")," to\na ",(0,n.kt)("inlineCode",{parentName:"p"},"Release")," build, but would do so when starting with a fresh build of type\n",(0,n.kt)("inlineCode",{parentName:"p"},"Release"),"."))}v.isMDXComponent=!0}}]);