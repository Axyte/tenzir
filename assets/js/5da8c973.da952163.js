"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(r),u=n,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||a;return r?o.createElement(k,i(i({ref:t},c),{},{components:r})):o.createElement(k,i({ref:t},c))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},20101:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>N,frontMatter:()=>k,metadata:()=>f,toc:()=>g});var o=r(3905),n=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(s)for(var r of s(t))l.call(t,r)&&c(e,r,t[r]);return e},m=(e,t)=>a(e,i(t)),u=(e,t)=>{var r={};for(var o in e)p.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(null!=e&&s)for(var o of s(e))t.indexOf(o)<0&&l.call(e,o)&&(r[o]=e[o]);return r};const k={sidebar_position:1},y="Docker Compose",f={unversionedId:"setup/deploy/docker-compose",id:"version-v3.0.0/setup/deploy/docker-compose",title:"Docker Compose",description:"We offer a range of Docker Compose files for quickly getting up and running with",source:"@site/versioned_docs/version-v3.0.0/setup/deploy/docker-compose.md",sourceDirName:"setup/deploy",slug:"/setup/deploy/docker-compose",permalink:"/docs/setup/deploy/docker-compose",draft:!1,editUrl:"https://github.com/tenzir/vast/tree/master/web/versioned_docs/version-v3.0.0/setup/deploy/docker-compose.md",tags:[],version:"v3.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Docker",permalink:"/docs/setup/deploy/docker"},next:{title:"AWS",permalink:"/docs/setup/deploy/aws"}},h={},g=[{value:"Quick Start with Docker Compose",id:"quick-start-with-docker-compose",level:2},{value:"Override Files",id:"override-files",level:2}],v={toc:g},b="wrapper";function N(e){var t=e,{components:r}=t,n=u(t,["components"]);return(0,o.kt)(b,m(d(d({},v),n),{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",d({},{id:"docker-compose"}),"Docker Compose"),(0,o.kt)("p",null,"We offer a range of Docker Compose files for quickly getting up and running with\nVAST. All mentioned files are in the ",(0,o.kt)("a",d({parentName:"p"},{href:"https://github.com/tenzir/vast/tree/master/docker"}),(0,o.kt)("inlineCode",{parentName:"a"},"docker"))," directory of\nthe VAST repository, and require having the repository checked out locally."),(0,o.kt)("admonition",d({},{title:"Docker Compose V2 CLI",type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"All examples shown use the ",(0,o.kt)("a",d({parentName:"p"},{href:"https://docs.docker.com/compose/#compose-v2-and-the-new-docker-compose-command"}),"Docker Compose V2 CLI"),". If\nusing ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose")," (with a space) does not work for you, try using\n",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose")," instead. We don't test our scripts explicitly with this older\nversion, so although most commands should work, we recommand upgrading to a\nrecent version of Docker and Compose.")),(0,o.kt)("h2",d({},{id:"quick-start-with-docker-compose"}),"Quick Start with Docker Compose"),(0,o.kt)("p",null,"To get up and running with VAST in Docker Compose, simply run from the\n",(0,o.kt)("inlineCode",{parentName:"p"},"docker/compose")," directory:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"export COMPOSE_FILE=vast.yaml\ndocker compose up\n")),(0,o.kt)("p",null,"This fetches the latest version of VAST from Docker Hub."),(0,o.kt)("admonition",d({},{title:"Cached Images and Containers",type:"info"}),(0,o.kt)("p",{parentName:"admonition"},"By default, Docker aggressively caches images and containers. To prevent Docker\nfrom re-using an image, pass ",(0,o.kt)("inlineCode",{parentName:"p"},"--pull always")," (Compose v2.8+) to ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose\nup"),". Similarly, to prevent Docker from re-using an already built container, pass\n",(0,o.kt)("inlineCode",{parentName:"p"},"--force-recreate"),".")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose run")," command makes interacting with VAST inside Docker\nCompose easy:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# Run `vast status` in the Docker Compose network.\ndocker compose run vast status\n\n# Import a Suricata Eve JSON file in the Docker Compose network.\n# NOTE: When piping to stdin, passing --no-TTY is required.\ndocker compose run --no-TTY vast import suricata < path/to/eve.json\n\n# Run a query against VAST.\n# NOTE: For commands that check whether input exists on stdin, passing\n# --interactive=false is required. This is a bug in Docker Compose.\ndocker compose run --interactive=false vast export json '#type == \"suricata.alert\"'\n")),(0,o.kt)("p",null,"The Docker Compose network by default exposes VAST on port 5158, allowing for\nusers to connect to it from outside, e.g., with a local VAST binary."),(0,o.kt)("h2",d({},{id:"override-files"}),"Override Files"),(0,o.kt)("p",null,"VAST's integrations with other services are opt-in, i.e., not loaded by default.\nTo opt into loading another service, specify its override file when starting\nDocker Compose:"),(0,o.kt)("pre",null,(0,o.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# Load both VAST and Zeek, and the import that sits between the two.\n# NOTE: The override file for Zeek does not exist yet, but we plan to add it in\n# the near future.\ndocker compose -f docker/compose/vast.yaml \\\n               -f docker/compose/zeek.yaml \\\n               -f docker/compose/zeek.vast-import.yaml \\\n               up\n")),(0,o.kt)("p",null,"We currently have the following override files:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",d({parentName:"tr"},{align:null}),"File"),(0,o.kt)("th",d({parentName:"tr"},{align:null}),"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/vast.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"The ",(0,o.kt)("inlineCode",{parentName:"td"},"vast")," service that starts up a VAST server including REST API.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/vast.volume.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Add persistent storage to VAST.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/vast.build.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Force VAST to be built from source.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/quarto.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Build the Quarto image and run Bash inside.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/quarto.bind.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Bind mound the VAST respository.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/quarto.vast.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Apply settings to connect to the VAST service.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/thehive.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Start TheHive/Cortex with a basic initial setup.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/thehive.vast.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Integrate the Analyzer with the VAST service.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/thehive.app.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Start an integration app for Suricata alerts.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/misp.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Start MISP with a basic initial setup.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",d({parentName:"tr"},{align:null}),"docker/compose/misp.proxy.yaml"),(0,o.kt)("td",d({parentName:"tr"},{align:null}),"Add a reverse proxy for dynamic hostnames.")))))}N.isMDXComponent=!0}}]);