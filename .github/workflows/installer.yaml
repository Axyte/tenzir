name: Tenzir Installer
on:
  workflow_dispatch:
  schedule:
    - cron: '20 2 * * *'  # everyday at 2:20

# IMPORTANT NOTE: The distros that are tested here were chosen to maximize test
# coverage of the installer script. That doesn't imply that we commit to support
# them. We might just comment out distros with failing checks from the matrix on
# an adhoc basis.

jobs:
  stock-linux:
    name: Provided linux runners
    strategy:
      matrix:
        image: [ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.image }}
    steps:
      - name: Run installer
        run: curl https://get.tenzir.app | sh
  # stock-macos:
  #   name: Provided MacOS runners
  #   strategy:
  #     matrix:
  #       image: [macos-12, macos-13]
  #   runs-on: ${{ matrix.image }}
  #   steps:
  #     - name: Run installer
  #       run: curl https://get.tenzir.app | sh
  container-linux:
    name: Linux in containers
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ["ubuntu:22.04", "ubuntu:23.04", "ubuntu:23.10", "debian:11", "debian:12",
                "fedora:37", "fedora:38", "fedora:39", "amazonlinux:2", "amazonlinux:2023"]
        source: ["default", "remote-package", "remote-tarball", "local-package", "local-tarball"]
    container:
      image: ${{ matrix.image }}
    env:
      PACKAGE_URL: https://storage.googleapis.com/tenzir-dist-public/packages/main/debian/tenzir-static-latest.deb
      TARBALL_URL: https://storage.googleapis.com/tenzir-dist-public/packages/main/tarball/tenzir-static-latest.gz
    steps:
      - name: Configure
        run: |
          # env: above is evaluated before matrix is populated, so we can't set these in env:
          echo "IS_DEBIAN=${{ contains(matrix.image, 'ubuntu') || contains(matrix.image, 'debian') }}" >> $GITHUB_ENV
          echo "IS_REDHAT=${{ contains(matrix.image, 'fedora') || contains(matrix.image, 'amazonlinux') }}" >> $GITHUB_ENV

      - name: Setup dependencies
        run: |
          if $IS_DEBIAN; then
            apt update && apt install -y curl sudo adduser
          else
            yum install -y tar sudo
          fi

      - name: Run installer
        run: |
          if [ "${{ matrix.source }}" = "default" ]; then
            curl https://get.tenzir.app | sh
          elif [ "${{ matrix.source }}" = "remote-package" ] && $IS_DEBIAN; then
            curl https://get.tenzir.app | sh -s -- --package-url=$PACKAGE_URL
          elif [ "${{ matrix.source }}" = "remote-tarball" ]; then
            curl https://get.tenzir.app | sh -s -- --package-url=$TARBALL_URL
          elif [ "${{ matrix.source }}" = "local-package" ] && $IS_DEBIAN; then
            curl -o /tmp/tenzir-static-latest.deb $PACKAGE_URL
            curl https://get.tenzir.app | sh -s -- --package-path=/tmp/tenzir-static-latest.deb
          elif [ "${{ matrix.source }}" = "local-tarball" ]; then
            curl -o /tmp/tenzir-static-latest.gz $TARBALL_URL
            curl https://get.tenzir.app | sh -s -- --package-url=/tmp/tenzir-static-latest.gz
          fi
